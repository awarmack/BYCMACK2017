interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)$y
y[missing] <- interps
return(y)
}
approx(newpol$X, newpol$X6, xout=41)
interpX(newpol$X, newpol$X6)
x <- newpol$X
y <- newpol$X6
y
missing <- x[is.na(y)]
missing
approx(x, y, xout=missing)
interps <- approx(x, y, xout=missing)
interps
interps$y
y[missing]
is.na(y)
y[is.na(y)]
y[is.na(y)] <- interps
y
y[is.na(y)] <- interps$y
y
interps$y
y[is.na(y)]
y <- newpol$y
y <- newpol$X6
y
y[is.na(y)]
interps$y
y[is.na(y)] <- interps$y
y
plot(y)
points(newpol$X6, col="blue")
points(newpol$X6, col="red")
?points
pch=0:18
pch
points(newpol$X6, col="red", phc=18)
points(newpol$X6, col="red", pch=18)
?apply
test <- apply(newpol, 2, FUN=interpX, x=newpol$X)
all(is.na[newpol])
all(is.na(newpol))
rm(list=ls)
list(ls)
ls()
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
newpol <- as.data.frame(matrix(NA, length(30:180), length(kts)))
newpol <- as.data.frame(matrix(NA, length(30:180), length(kts)))
names(newpol)<- kts
newpol$X <- degs
newpol[degs %in% pol$X, names(pol)] <- pol
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- kts
npol$X <- degs
#apply known data
npol[degs %in% pol$X, names(pol)] <- pol
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
names(npol)<- kts
names(npol)<- pol
npol$X <- degs
npol[degs %in% pol$X, names(pol)] <- pol
npol[degs %in% pol$X] <- pol
pol
head(pol)
head(npol)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
head(npol)
names(npol)<- pol
head(npol)
names(npol)<- names(pol)
npol$X <- degs
head(npol$X)
npol
npol[degs %in% pol$X] <- pol
dim(pol)
library(ggplot2)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
#apply known data
npol[degs %in% pol$X] <- pol
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
head(npol)
degs %in% pol$X
npol[degs %in% pol$X]
npol[degs %in% pol$X,]
npol[degs %in% pol$X,] <- pol
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
head(npol, 20)
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
test <- apply(npol[], 2, FUN=interpX, x=npol$X)
test
head(test)
View(test)
View(rbind(npol, test))
View(npol)
View(Cbind(npol, test))
View(cbind(npol, test))
npol <- apply(npol[], 2, FUN=interpX, x=npol$X)
npol2 <- npol <- as.data.frame(matrix(NA, length(30:180), length(kts)))
npol2
names(npol2) <- kts
head(npol2)
npol2[, names(npol)]
names(npol)
head(npol)
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
#apply known data
npol[degs %in% pol$X,] <- pol
#interperlate data in the X direction
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
npol <- apply(npol[], 2, FUN=interpX, x=npol$X)
head(npol)
npol2 <- npol <- as.data.frame(matrix(NA, length(30:180), length(kts)))
names(npol2) <- kts
npol2[, names(npol)]
names(npol)
head(npol)
library(ggplot2)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
#apply known data
npol[degs %in% pol$X,] <- pol
#interperlate data in the X direction
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
npol <- apply(npol, 2, FUN=interpX, x=npol$X)
head(npol)
npol2 <- npol <- as.data.frame(matrix(NA, length(30:180), length(kts)))
library(ggplot2)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
#apply known data
npol[degs %in% pol$X,] <- pol
#interperlate data in the X direction
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
npol <- apply(npol, 2, FUN=interpX, x=npol$X)
npol2 <- as.data.frame(matrix(NA, length(30:180), length(kts)))
head(npol)
names(npol)
npol <- as.data.frame(apply(npol, 2, FUN=interpX, x=npol$X))
library(ggplot2)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
#apply known data
npol[degs %in% pol$X,] <- pol
#interperlate data in the X direction
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
npol <- as.data.frame(apply(npol, 2, FUN=interpX, x=npol$X))
npol2 <- as.data.frame(matrix(NA, length(30:180), length(kts)))
names(npol2) <- kts
npol2[, names(npol)]
library(ggplot2)
rm(list=ls())
pol <- read.csv("~/Dropbox/Projects/Sailing/polars.csv")
degs <- 30:180
kts <-  c("X", paste0("X", 6:20))
#create empty data frame
npol <- as.data.frame(matrix(NA, length(30:180), length(pol)))
#apply names
names(npol)<- names(pol)
npol$X <- degs
#apply known data
npol[degs %in% pol$X,] <- pol
#interperlate data in the X direction
interpX <- function(x, y){
#x = x input (TWA)
#y = output (SOG)
missing <- x[is.na(y)]
interps <- approx(x, y, xout=missing)
y[is.na(y)] <- interps$y
return(y)
}
npol <- as.data.frame(apply(npol, 2, FUN=interpX, x=npol$X))
npol2 <- as.data.frame(matrix(NA, length(30:180), length(kts)))
names(npol2) <- kts
npol
head(npol)
npol2[, names(npol)] <- npol
head(npol2)
source('~/Dropbox/projects/sailing/convPolars_iregatta.R', echo=TRUE)
list.files()
setwd("~/Dropbox/Projects/Sailing/BYCMACK2017")
rawdat <- read.csv("./dat/datalog3")
?read.csv
rawdat <- read.csv("./dat/datalog3", header=FALSE)
head(rawdat)
View(rawdat)
?grep
library(stringr)
?str_sub
head(rawdat$v1,1)
head(rawdat,1)
timest <- str_sub(rawdat$V1, start=4, end=17)
summary(rawdat)
str(rawdat)
timest <- str_sub(rawdat$V1, start=4, end=17)
head(timest)
timest <- str_sub(rawdat$V1, start=4, end=17)
timest <- as.POSIXct(timest, origin="1970-01-01")
timest <- str_sub(rawdat$V1, start=4, end=16)
timest <- as.POSIXct(timest, origin="1970-01-01")
timest <- as.integer(str_sub(rawdat$V1, start=4, end=16))
table(is.na(timest))
table(is.character(timest))
head(timest)
timest <- as.integer(str_sub(rawdat$V1, start=4, end=16))
timest <- str_sub(rawdat$V1, start=4, end=16)
head(timest)
is.character(head(timest))
is.character(timest)
table(is.na(timest))
as.numeric(head(timest))
as.POSIXct(as.numeric(head(timest)), origin="1970-01-01")
?as.POSIXct
?as.POSIXlt
st_time <- head(timest, 1)
st_time
as.POSIXct(st_time)
st_time <- as.integer(head(timest, 1))
st_time <- as.numeric(head(timest, 1))
st_time
as.POSIXct(st_time)
as.POSIXct(st_time, origin="1970-01-01")
as.POSIXct((st_time+0.1)/1000, origin="1970-01-01")
end_time <- as.numeric(tail(timest, 1))
as.POSIXct((end_time+0.1)/1000, origin="1970-01-01")
end_time
as.POSIXct(1500743797683, origin="1970-01-01", tz="GMT")
as.POSIXct(1500743797683/1000, origin="1970-01-01", tz="GMT")
as.POSIXct(1500743797683/1000, origin="1970-01-01", tz="EST")
as.POSIXct(1500743797683/1000, origin="1970-01-01", tz="EDT")
as.POSIXct(1500743797683/1000, origin="1970-01-01", tz="EST")
as.POSIXct(1500743797683/1000, origin="1970-01-01", tz="UTC")
as.POSIXct(1500743797683/1000, origin="1970-01-01")
as.POSIXct(1500743797670/1000, origin="1970-01-01")
as.POSIXct(1500634416338/1000, origin="1970-01-01")
24*3600*1000
as.POSIXct(1500743795922/1000, origin="1970-01-01")
timest <- str_sub(rawdat$V1, start=4, end=16)
class(timest)
as.numeric(timest)
timest[is.na(as.numeric(timest))]
rawdat[is.na(as.numeric(timest)), ]
View(rawdat[is.na(as.numeric(timest)), ])
?read.csv
rawdat[2967:2968, ]
as.POSIXct(1500743795922/1000, origin="1970-01-01")
as.POSIXct(1500743795922/1000, origin="1970-01-01", tz="UTC")
as.POSIXct(end_time/1000, origin="1970-01-01", tz="UTC")
as.POSIXct(end_time/1000, origin="1970-01-01")
timest <- str_sub(rawdat$V1, start=4, end=16)
nchar(rawdat$V1)
str(rawdat)
library(stringr)
setwd("~/Dropbox/Projects/Sailing/BYCMACK2017")
rawdat <- read.csv("./dat/datalog3", header=FALSE, stringsAsFactors = FALSE)
library(stringr)
setwd("~/Dropbox/Projects/Sailing/BYCMACK2017")
rawdat <- read.csv("./dat/datalog3", header=FALSE, stringsAsFactors = FALSE)
str(rawdat)
nchar(rawdat$V1)
table(nchar(rawdat$V1))
str(rawdat)
table(nchar(rawdat$v1)==26)
nchar(rawdat$v1)==26
nchar(rawdat$v1)
table(nchar(rawdat$V1)==26)
?read.csv
as.POSIXct(15006345131000/1000, origin="1970-01-01")
not26 <- nchar(rawdat$V1)==26
table(not26)
View(rawdat[not26, ])
as.POSIXct(1500634416338/1000, origin="1970-01-01")
nchar("\c:1500634449023*64\$GPBOD")
nchar("\\c:1500634449023*64\$GPBOD")
nchar("\\\c:1500634449023*64\\\$GPBOD")
nchar("Xc:1500634449023*64X$GPBOD")
View(rawdat[!not26, ])
dat <- rawdat[nchar(rawdat$V1)==26, ]
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.POSIXct(timest, origin="1970-01-01")
timest <- str_sub(dat$V1, start=4, end=16)
head(timest)
tail(timest)
timest <- as.integer(str_sub(dat$V1, start=4, end=16))
timest <- str_sub(dat$V1, start=4, end=16)
timest[!as.integer(timest)]
timest
is.na(timest)
table(is.na(timest))
table(as.integer(timest))
table(is.na(as.integer(timest)))
#Remove Weird columns
dat <- rawdat[nchar(rawdat$V1)==26, ]
#extract the time
timest <- str_sub(dat$V1, start=4, end=16)
table(is.na(as.integer(timest)))
table(is.na(as.numeric(timest)))
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.numeric(timest)
timest <- as.POSIXct(timest, origin="1970-01-01")
head(timest)
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.numeric(timest)
timest <- as.POSIXct(timest/1000, origin="1970-01-01")
head(timest)
tail(timest)
timest <- str_sub(dat$V1, start=4, end=16) + 36*3600*1000
timest <- as.numeric(timest)
timest <- as.POSIXct(timest/1000, origin="1970-01-01")
st_time <- as.numeric(head(timest, 1))
end_time <- as.numeric(tail(timest, 1))
end_time
timest <- str_sub(dat$V1, start=4, end=16) + 36*3600*1000
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.numeric(timest) + 36*3600*1000 #adding 36 hrs
timest <- as.POSIXct(timest/1000, origin="1970-01-01")
st_time <- as.numeric(head(timest, 1))
end_time <- as.numeric(tail(timest, 1))
end_time
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.numeric(timest) + 36*3600*1000 #adding 36 hrs
tail(timest)
timest <- as.POSIXct(timest/1000, origin="1970-01-01")
tail(timest)
?as.POSIXct
strptime
?striptime
?strptime
as.POSIXct("20170724071420",  format="%Y%m%d%h%M%S", tz="UTC")
strptime("20170724071420",  format="%Y%m%d%h%M%S", tz="UTC")
strptime("071420",  format="%h%M%S", tz="UTC")
end_time
#extract the time
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.numeric(timest) + 36*3600*1000 #adding 36 hrs
timest <- as.POSIXct(timest/1000, origin="1970-01-01")
st_time <- head(timest, 1)
end_time <- tail(timest, 1)
end_time
timest <- str_sub(dat$V1, start=4, end=16)
timest <- as.numeric(timest)  #adding 36 hrs
timest <- as.POSIXct(timest/1000, origin="1970-01-01")
st_time <- head(timest, 1)
end_time <- tail(timest, 1)
strptime("071420",  format="%h%M%S", tz="UTC")
end_time
as.POSIXct((1500743797513+0.1)/1000, origin="1970-01-01")
as.POSIXct((1500743797513+0.1)/1000, origin="1970-01-01", tz="UTC")
as.POSIXct("2017-07-24 07:14:20 UTC")
as.POSIXct("2017-07-24 07:14:20 UTC", tz="UTC")
as.POSIXct("2017-07-24 07:14:20 UTC", tz="UTC")
pitime <- as.POSIXct((1500743797513+0.1)/1000, origin="1970-01-01", tz="UTC")
actual <- as.POSIXct("2017-07-24 07:14:20 UTC", tz="UTC")
pitime - actual
as.numeric(actual)
1500743797513
as.numeric(1500743797513)
actual
pitime
pitime <- as.POSIXct((1500743797513)/1000, origin="1970-01-01", tz="UTC")
pitime
as.numeric(actual) - 1500743797513
pitime
as.numeric(pitime)
as.numeric(pitime)*1000
pitime
actual
actual - pitime
pitime + 1.581742
tdiff <- actual - pitime
tdiff
tail(timest)
#adjust time using last GPS as actual
pitime <- as.POSIXct((1500743797513)/1000, origin="1970-01-01", tz="UTC")
actual <- as.POSIXct("2017-07-24 07:14:20 UTC", tz="UTC")
tdiff <- actual - pitime
tail(timest)
head(timest)
timest <- timest + tdiff
head(timest)
tail(timest)
head(timest,1)-tail(timest,1)
dat$timest <- timest
View(head(dat))
?grep
?stringr
str_extract(dat$V1, ".*\\$.*)
)
str_extract(head(dat$V1), ".*\\$.*")
str_extract(head(dat$V1), ".*(\\$.*)")
shopping_list <- c("apples x4", "bag of flour", "bag of sugar", "milk x2")
str_extract(shopping_list, "\\d")
str_extract(head(dat$V1), "\\$.*")
dat$nmea <- str_extract(dat$V1, "\\$.*")
View(head(dat))
View(head(dat, 30))
table(dat$nmea)
View(dat[dat$nmea=="$WIMWV", ])
unique(dat$nmea)
View(dat[dat$nmea=="$IIMWV", ])
View(dat[dat$nmea=="$IIMTW", ])
