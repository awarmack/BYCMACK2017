"SPE" = V6) %>%
na.omit()
# Combine Data frames
datframes <- list(mwv, stw, vlw, mtw, bod, bwc, gga, xte, rmc, vtg, rme)
alldat <- datframes %>%
Reduce(function(dtf1,dtf2) full_join(dtf1,dtf2,by="timest"), .)
alldat$timest <- as.numeric(alldat$timest)
alldat <- arrange(alldat, timest, desc(timest))
?timestamp
head(alldat)
difftime <- head(alldat[!is.na(alldat$time), c("timest", "time")], 1)
difftime <- head(alldat[!is.na(alldat$time), c("timest", "gps.time")], 1)
difftime
difftime <- head(alldat[!is.na(alldat$gps.time), c("timest", "gps.time")], 1)
difftime
actual <- as.POSIXct("2017-07-24 07:14:20 UTC", tz="UTC")
actual
paste0("2017", difftime$gps.time)
gga <- dat[dat$nmea=="$GPGGA", ]
head(gga)
bwc <- dat[dat$nmea=="$GPBWC", ]
head(bwc)
dat[dat$nmea=="$GPRMC", ]
rmc <- dat[dat$nmea=="$GPRMC", ]
head(rmc)
rmc <- dat[dat$nmea=="$GPRMC", ] %>%
select(timest, V2, V8, V9, v10) %>%
mutate(V8 = as.numeric(V8),
V9 = as.numeric(V9)) %>%
rename("rmc.time"=V2,
"rmc.SOG" = V8,
"rmc.TMG" = V9,
"rmc.date" = V10) %>%
filter(rmc.SOG < 14) %>%
na.omit()
rmc <- dat[dat$nmea=="$GPRMC", ] %>%
select(timest, V2, V8, V9, V10) %>%
mutate(V8 = as.numeric(V8),
V9 = as.numeric(V9)) %>%
rename("rmc.time"=V2,
"rmc.SOG" = V8,
"rmc.TMG" = V9,
"rmc.date" = V10) %>%
filter(rmc.SOG < 14) %>%
na.omit()
head(rmc)
##Read raw nmea data
rm(list=ls())
#Load necessary libraries
library(stringr)
library(dplyr)
library(tidyr)
#load supporting functions
source("./src/functions.R")
# Import raw csv file ==============
rawdat <- read.csv("./dat/datalog3", header=FALSE, stringsAsFactors = FALSE)
# Timestamp Cleanup ===============
#Remove any rows where date column has the inccorrect number of characters
dat <- rawdat[nchar(rawdat$V1)==26, ]
#extract the timestamp in seconds
timest <- str_sub(dat$V1, start=4, end=16)
dat$timest <- timest
## split into different frames =========
#extract NMEA Headers
dat$nmea <- str_extract(dat$V1, "\\$.*")
#MWV - wind speed from Raymarine =======
mwv <- dat[dat$nmea =="$IIMWV",] %>%
select(timest, V2, V4) %>%
rename("AWA"=V2, "AWS"=V4) %>%
mutate(AWA = as.numeric(AWA),
AWS = as.numeric(AWS)) %>%
filter(AWS < 100) %>%
na.omit()
#STW - boat speed from Raymarine ====
stw <- dat[dat$nmea =="$IIVHW", ]
stw <- stw %>% select(timest, V6) %>% rename("STW"=V6) %>%
mutate(STW = as.numeric(STW)) %>%
filter(STW < 13) %>%
na.omit()
#VLW - boat distance travelled from Raymarine ====
vlw <- dat[dat$nmea == "$IIVLW", ]
vlw <- vlw %>% select(timest, V2) %>% rename("cm.miles"=V2)
vlw$cm.miles <- as.numeric(vlw$cm.miles)
vlw$cm.miles[vlw$cm.miles > 5220.3] <- NA
vlw$cm.miles[vlw$cm.miles < 5069] <- NA
#MTW - Water Temperature from Raymarine ====
mtw <- dat[dat$nmea == "$IIMTW", ] %>%
select(timest, V2) %>%
rename("MTW"=V2) %>%
mutate(MTW = as.numeric(MTW)) %>%
filter(MTW < 26) %>%
#gather("key", "val",  -timest) %>%
#group_by(timest, key) %>% summarise(val = mean(val)) %>%
na.omit()
#GPS BOD - bearing from waypoint to waypoint ====
#bod.m = bearing magnetic
#bod.t = bearing true
bod <- dat[dat$nmea=="$GPBOD",] %>%
select(timest, V2, V4, V6) %>%
rename("bod.t"=V2, "bod.m" =V4, "bod.wpt" = V6) %>%
mutate(bod.t =as.numeric(bod.t),
bod.m = as.numeric(bod.m))  %>%
#gather("key", "val",  -timest) %>%
#group_by(timest, key) %>% summarise(val = mean(val)) %>%
na.omit()
#GPS BWC - Bearing & Distance to Waypoint ====
#wpt.lat = waypoint latitude
#wpt.long = waypoint longitude
#bwc.t = bearing to waypoint True
#bwc.m = bearing to waypoint Mag
#wpt.dis = Distance to Waypoint (nm)
#wpt = Waypoint Name
bwc <- dat[dat$nmea=="$GPBWC", ] %>%
select(timest, V3, V5, V7, V9, V11, V13) %>%
mutate(V3 = convCoord(as.numeric(V3)),
V5 = convCoord(as.numeric(V5))*-1,
V7 = as.numeric(V7),
V9 = as.numeric(V9),
V11 = as.numeric(V11)) %>%
rename("wpt.lat" = V3,
"wpt.lon" = V5,
"bwc.t" = V7,
"bwc.m" = V9,
"wpt.dis" = V11,
"bwc.wpt" = V13) %>%
na.omit()
#GPS GGA - Global Positioning System Fix Data from Garmin ====
gga <- dat[dat$nmea=="$GPGGA", ] %>%
select(timest, V2, V3, V4, V5, V6, V7, V8, V9, V10, V12) %>%
mutate(V3 = convCoord(as.numeric(V3)),
V5 = convCoord(as.numeric(V5))*-1,
V7 = as.integer(V7),
V8 = as.integer(V8),
V9 = as.numeric(V9),
V10 = as.numeric(V10),
V12 = as.numeric(V12)) %>%
rename("gps.time"=V2,
"gga.lat"=V3,
"gga.lon"=V5,
"gps.qual"=V7,
"no.sat"=V8,
"prec"=V9,
"ant.alt"=V10,
"geo.sep"=V12) %>%
filter(gga.lat < 47) %>%
filter(gga.lon < -82.5) %>%
filter(ant.alt < 400) %>%
na.omit()
#Geographic Position from Garmin
#gpgll <- dat[dat$nmea=="$GPGLL", ]
#GPS XTE - Cross Track error Recommended Minimum Navigation Information B ====
#xte = Cross-Track Error  <-- only thing usefull here
#str.dir = Direction to steer
#wpt.to = TO waypoint
#wpt.fr = FROM waypoint
#wpt.lat = Waypoint Latitude
#wpt.lon = Waypoint Longitude
#dest.rng = range to destination in NM
#dest.ber = bearing to destination
xte <- dat[dat$nmea=="$GPRMB", ]  %>%
select(timest, V3) %>%
mutate(V3 = as.numeric(V3)) %>%
rename("XTE" = V3) %>%
filter(XTE < 10) %>%
na.omit
#GPS RMC - Recommended Minimum Navigation Information C ====
#gps.SOG = GPS Speed Over Ground
#tmg = Track Made Good
rmc <- dat[dat$nmea=="$GPRMC", ] %>%
select(timest, V2, V8, V9, V10) %>%
mutate(V8 = as.numeric(V8),
V9 = as.numeric(V9)) %>%
rename("rmc.time"=V2,
"rmc.SOG" = V8,
"rmc.TMG" = V9,
"rmc.date" = V10) %>%
filter(rmc.SOG < 14) %>%
na.omit()
#GPS VTG -  Track Made Good and Ground Speed ====
vtg <- dat[dat$nmea=="$GPVTG", ] %>%
select(timest, V2, V6) %>%
mutate(V2 = as.numeric(V2),
V6 = as.numeric(V6)) %>%
rename("SOG.gps" = V6,
"COG.gps" = V2) %>%
filter(COG.gps <= 360) %>%
filter(SOG.gps <= 12) %>%
na.omit()
#GPS RME - Estimated Error ====
rme <- dat[dat$nmea == "$PGRME", ] %>%
select(timest, V2, V4, V6) %>%
mutate(V2 = as.numeric(V2),
V4 = as.numeric(V4),
V6 = as.numeric(V6)) %>%
rename("HPE" = V2,
"VPE" = V4,
"SPE" = V6) %>%
na.omit()
# Combine Data frames
datframes <- list(mwv, stw, vlw, mtw, bod, bwc, gga, xte, rmc, vtg, rme)
alldat <- datframes %>%
Reduce(function(dtf1,dtf2) full_join(dtf1,dtf2,by="timest"), .)
alldat$timest <- as.numeric(alldat$timest)
alldat <- arrange(alldat, timest, desc(timest))
difftime <- head(alldat[!is.na(alldat$gps.time), c("timest", "gps.time")], 1)
head(difftime)
head(alldat)
difftime <- head(alldat[!is.na(alldat$rmc.time), c("timest", "rmc.time", "rmc.date")], 1)
difftime
paste0(difftime$rmc.date, difftime$rmc.time)
?as.POSIXct
paste0(difftime$rmc.date, difftime$rmc.time)
gps.time <- paste0(difftime$rmc.date, difftime$rmc.time)
gps.time
strptime(gps.time, format="%d%m%y%h%M%S")
gps.time <- paste0(difftime$rmc.date,"-", difftime$rmc.time)
gps.time
?strptime
strptime(gps.time, format="%d%m%y-%H%M%S")
as.POSIXct(strptime(gps.time, format="%d%m%y-%H%M%S"))
as.POSIXct(difftime$timest)
as.POSIXct(difftime$timest, origin="1970-01-01")
actual.time <- paste0(difftime$rmc.date,"-", difftime$rmc.time)
actual.time <- as.POSIXct(strptime(gps.time, format="%d%m%y-%H%M%S"))
actual.time
as.POSIXct(difftime$timest/1000, origin="1970-01-01")
actual.time - pi.time
pi.time <- as.POSIXct(difftime$timest/1000, origin="1970-01-01")
actual.time - pi.time
tdiff <- actual.time - pi.time
as.numeric(tdiff)
as.numeric(actual.time)
as.numeric(pi.time)
tdiff <- as.numeric(actual.time) - as.numeric(pi.time)
tdiff
tdiff <- as.numeric(actual.time)*1000 - as.numeric(pi.time)*1000
tdiff
pi.time
pi.time + tidff
pi.time + tiff
pi.time + tdiff
actual.time
tidff
tdiff
st_time <- as.POSIXct(head(alldat$timest,1)+tdiff)/1000, origin="1970-01-01")
st_time <- as.POSIXct((head(alldat$timest,1)+tdiff)/1000 , origin="1970-01-01")
st_time
actual.time <- as.POSIXct(strptime(gps.time, format="%d%m%y-%H%M%S"))
actual.time
actual.time <- as.POSIXct(strptime(gps.time, format="%d%m%y-%H%M%S"), tzone="UTC")
actual.time
?strptime
strptime(gps.time, format="%d%m%y-%H%M%S")
actual.time <- as.POSIXct(strptime(gps.time, format="%d%m%y-%H%M%S", tz="UTC"))
actual.time
pi.time <- as.POSIXct(difftime$timest/1000, origin="1970-01-01")
pi.time
tdiff <- as.numeric(actual.time)*1000 - as.numeric(pi.time)*1000
st_time <- as.POSIXct((head(alldat$timest,1)+tdiff)/1000 , origin="1970-01-01")
st_time
end_time <-
alldat$timest <- alldat$timest + tdiff
end_time <- as.POSIXct(tail(alldat$timest,1)/1000, origin="1970-01-01")
end_time
head(alldat)
alldat$time.s <- as.POSIXct(alldat$time.ms/1000, origin="1970-01-01")
head(alldat)
?select
select(alldat, time.s, everything())
source('C:/Users/AWarmack/Dropbox/projects/sailing/BYCMACK2017/src/readNMEA.R')
actual.time <- paste0(difftime$rmc.date,"-", difftime$rmc.time)
actual.time <- as.POSIXct(strptime(rmc.time, format="%d%m%y-%H%M%S", tz="UTC"))
pi.time <- as.POSIXct(difftime$time.ms/1000, origin="1970-01-01")
tdiff <- as.numeric(actual.time)*1000 - as.numeric(pi.time)*1000  #time diff in ms
alldat$time.ms <- alldat$time.ms + tdiff
#test the start and end time
st_time <- as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
end_time <- as.POSIXct(tail(alldat$time.ms,1)/1000, origin="1970-01-01")
alldat$time.s <- as.POSIXct(alldat$time.ms/1000, origin="1970-01-01")
#reorder columns
select(alldat, time.s, everything())
print(st_time)
print(end_time)
write.csv(alldat, "./dat/all_data.csv")
names(alldat)
alldat <- select(alldat, time.s, everything())
head(alldat)
source('C:/Users/AWarmack/Dropbox/projects/sailing/BYCMACK2017/src/readNMEA.R')
head(alldat)
difftime <- head(alldat[!is.na(alldat$rmc.time), c("time.ms", "rmc.time", "rmc.date")], 1)
difftime
actual.time <- as.POSIXct(strptime(actual.time, format="%d%m%y-%H%M%S", tz="UTC"))
actual.time
actual.time <- paste0(difftime$rmc.date,"-", difftime$rmc.time)
actual.time <- as.POSIXct(strptime(actual.time, format="%d%m%y-%H%M%S", tz="UTC"))
actual.time
pi.time <- as.POSIXct(difftime$time.ms/1000, origin="1970-01-01")
tdiff <- as.numeric(actual.time)*1000 - as.numeric(pi.time)*1000  #time diff in ms
alldat$time.ms <- alldat$time.ms + tdiff
#test the start and end time
st_time <- as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
end_time <- as.POSIXct(tail(alldat$time.ms,1)/1000, origin="1970-01-01")
alldat$time.s <- as.POSIXct(alldat$time.ms/1000, origin="1970-01-01")
#reorder columns
alldat <- select(alldat, time.s, everything())
print(st_time)
print(end_time)
write.csv(alldat, "./dat/all_data.csv")
st_time <- as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
pi.time
tdiff
as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
actual.time
pi.time
pi.time <- as.POSIXct(difftime$time.ms/1000, origin="1970-01-01", tz="UTC")
pi.time
tdiff <- as.numeric(actual.time)*1000 - as.numeric(pi.time)*1000  #time diff in ms
tdiff
actual.time
pi.time
source('C:/Users/AWarmack/Dropbox/projects/sailing/BYCMACK2017/src/readNMEA.R')
##Read raw nmea data
rm(list=ls())
#Load necessary libraries
library(stringr)
library(dplyr)
library(tidyr)
#load supporting functions
source("./src/functions.R")
# Import raw csv file ==============
rawdat <- read.csv("./dat/datalog3", header=FALSE, stringsAsFactors = FALSE)
# time.msamp Cleanup ===============
#Remove any rows where date column has the inccorrect number of characters
dat <- rawdat[nchar(rawdat$V1)==26, ]
#extract the time.msamp in seconds
time.ms <- str_sub(dat$V1, start=4, end=16)
dat$time.ms <- time.ms
## split into different frames =========
#extract NMEA Headers
dat$nmea <- str_extract(dat$V1, "\\$.*")
#MWV - wind speed from Raymarine =======
mwv <- dat[dat$nmea =="$IIMWV",] %>%
select(time.ms, V2, V4) %>%
rename("AWA"=V2, "AWS"=V4) %>%
mutate(AWA = as.numeric(AWA),
AWS = as.numeric(AWS)) %>%
filter(AWS < 100) %>%
na.omit()
#STW - boat speed from Raymarine ====
stw <- dat[dat$nmea =="$IIVHW", ]
stw <- stw %>% select(time.ms, V6) %>% rename("STW"=V6) %>%
mutate(STW = as.numeric(STW)) %>%
filter(STW < 13) %>%
na.omit()
#VLW - boat distance travelled from Raymarine ====
vlw <- dat[dat$nmea == "$IIVLW", ]
vlw <- vlw %>% select(time.ms, V2) %>% rename("cm.miles"=V2)
vlw$cm.miles <- as.numeric(vlw$cm.miles)
vlw$cm.miles[vlw$cm.miles > 5220.3] <- NA
vlw$cm.miles[vlw$cm.miles < 5069] <- NA
#MTW - Water Temperature from Raymarine ====
mtw <- dat[dat$nmea == "$IIMTW", ] %>%
select(time.ms, V2) %>%
rename("MTW"=V2) %>%
mutate(MTW = as.numeric(MTW)) %>%
filter(MTW < 26) %>%
#gather("key", "val",  -time.ms) %>%
#group_by(time.ms, key) %>% summarise(val = mean(val)) %>%
na.omit()
#GPS BOD - bearing from waypoint to waypoint ====
#bod.m = bearing magnetic
#bod.t = bearing true
bod <- dat[dat$nmea=="$GPBOD",] %>%
select(time.ms, V2, V4, V6) %>%
rename("bod.t"=V2, "bod.m" =V4, "bod.wpt" = V6) %>%
mutate(bod.t =as.numeric(bod.t),
bod.m = as.numeric(bod.m))  %>%
#gather("key", "val",  -time.ms) %>%
#group_by(time.ms, key) %>% summarise(val = mean(val)) %>%
na.omit()
#GPS BWC - Bearing & Distance to Waypoint ====
#wpt.lat = waypoint latitude
#wpt.long = waypoint longitude
#bwc.t = bearing to waypoint True
#bwc.m = bearing to waypoint Mag
#wpt.dis = Distance to Waypoint (nm)
#wpt = Waypoint Name
bwc <- dat[dat$nmea=="$GPBWC", ] %>%
select(time.ms, V3, V5, V7, V9, V11, V13) %>%
mutate(V3 = convCoord(as.numeric(V3)),
V5 = convCoord(as.numeric(V5))*-1,
V7 = as.numeric(V7),
V9 = as.numeric(V9),
V11 = as.numeric(V11)) %>%
rename("wpt.lat" = V3,
"wpt.lon" = V5,
"bwc.t" = V7,
"bwc.m" = V9,
"wpt.dis" = V11,
"bwc.wpt" = V13) %>%
na.omit()
#GPS GGA - Global Positioning System Fix Data from Garmin ====
gga <- dat[dat$nmea=="$GPGGA", ] %>%
select(time.ms, V2, V3, V4, V5, V6, V7, V8, V9, V10, V12) %>%
mutate(V3 = convCoord(as.numeric(V3)),
V5 = convCoord(as.numeric(V5))*-1,
V7 = as.integer(V7),
V8 = as.integer(V8),
V9 = as.numeric(V9),
V10 = as.numeric(V10),
V12 = as.numeric(V12)) %>%
rename("gps.time"=V2,
"gga.lat"=V3,
"gga.lon"=V5,
"gps.qual"=V7,
"no.sat"=V8,
"prec"=V9,
"ant.alt"=V10,
"geo.sep"=V12) %>%
filter(gga.lat < 47) %>%
filter(gga.lon < -82.5) %>%
filter(ant.alt < 400) %>%
na.omit()
#Geographic Position from Garmin
#gpgll <- dat[dat$nmea=="$GPGLL", ]
#GPS XTE - Cross Track error Recommended Minimum Navigation Information B ====
#xte = Cross-Track Error  <-- only thing usefull here
#str.dir = Direction to steer
#wpt.to = TO waypoint
#wpt.fr = FROM waypoint
#wpt.lat = Waypoint Latitude
#wpt.lon = Waypoint Longitude
#dest.rng = range to destination in NM
#dest.ber = bearing to destination
xte <- dat[dat$nmea=="$GPRMB", ]  %>%
select(time.ms, V3) %>%
mutate(V3 = as.numeric(V3)) %>%
rename("XTE" = V3) %>%
filter(XTE < 10) %>%
na.omit
#GPS RMC - Recommended Minimum Navigation Information C ====
#gps.SOG = GPS Speed Over Ground
#tmg = Track Made Good
rmc <- dat[dat$nmea=="$GPRMC", ] %>%
select(time.ms, V2, V8, V9, V10) %>%
mutate(V8 = as.numeric(V8),
V9 = as.numeric(V9)) %>%
rename("rmc.time"=V2,
"rmc.SOG" = V8,
"rmc.TMG" = V9,
"rmc.date" = V10) %>%
filter(rmc.SOG < 14) %>%
na.omit()
#GPS VTG -  Track Made Good and Ground Speed ====
vtg <- dat[dat$nmea=="$GPVTG", ] %>%
select(time.ms, V2, V6) %>%
mutate(V2 = as.numeric(V2),
V6 = as.numeric(V6)) %>%
rename("SOG.gps" = V6,
"COG.gps" = V2) %>%
filter(COG.gps <= 360) %>%
filter(SOG.gps <= 12) %>%
na.omit()
#GPS RME - Estimated Error ====
rme <- dat[dat$nmea == "$PGRME", ] %>%
select(time.ms, V2, V4, V6) %>%
mutate(V2 = as.numeric(V2),
V4 = as.numeric(V4),
V6 = as.numeric(V6)) %>%
rename("HPE" = V2,
"VPE" = V4,
"SPE" = V6) %>%
na.omit()
# Combine Data frames
datframes <- list(mwv, stw, vlw, mtw, bod, bwc, gga, xte, rmc, vtg, rme)
alldat <- datframes %>%
Reduce(function(dtf1,dtf2) full_join(dtf1,dtf2,by="time.ms"), .)
head(alldat)
alldat$time.ms <- as.numeric(alldat$time.ms)
alldat <- arrange(alldat, time.ms, desc(time.ms))
head(alldat)
difftime <- head(alldat[!is.na(alldat$rmc.time), c("time.ms", "rmc.time", "rmc.date")], 1)
difftime
difftime <- head(alldat[!is.na(alldat$rmc.time), c("time.ms", "rmc.time", "rmc.date")], 1)
actual.time <- paste0(difftime$rmc.date,"-", difftime$rmc.time)
actual.time <- as.POSIXct(strptime(actual.time, format="%d%m%y-%H%M%S", tz="UTC"))
pi.time <- as.POSIXct(difftime$time.ms/1000, origin="1970-01-01", tz="UTC")
actual.time
pi.time
as.numeric(pi.time)
as.numeric(pi.time)*1000
as.numeric(actual.time)*1000
(head(alldat$time.ms,1)
)
as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
alldat$time.ms <- alldat$time.ms + tdiff
tdiff <- as.numeric(actual.time)*1000 - as.numeric(pi.time)*1000  #time diff in ms
as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
st_time <- as.POSIXct((head(alldat$time.ms,1)+tdiff)/1000 , origin="1970-01-01")
end_time <- as.POSIXct(tail(alldat$time.ms,1)/1000, origin="1970-01-01")
end_time
alldat$time.ms <- alldat$time.ms + tdiff
end_time <- as.POSIXct(tail(alldat$time.ms,1)/1000, origin="1970-01-01")
end_time
head(alldat)
alldat$time.s <- as.POSIXct(alldat$time.ms/1000, origin="1970-01-01")
head(alldat)
alldat <- select(alldat, time.s, everything())
print(st_time)
print(end_time)
write.csv(alldat, "./dat/all_data.csv")
head(alldat)
